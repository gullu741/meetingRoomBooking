{"version":3,"sources":["assets/google-icon.svg","pages/login/Login.js","component/navBar/NavBar.js","constants/actionTypes.js","actions/userActions.js","pages/sumamry/Summary.js","pages/meetingRoomDetails/MeetingRoomDetails.js","pages/chooseSlot/TimeSlots.js","pages/chooseSlot/ChooseSlot.js","App.js","serviceWorker.js","reducers/userReducer.js","store/userStore.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","_ref3","_ref4","_ref5","SvgGoogleIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","preserveAspectRatio","ref","id","ForwardRef","Login","style","marginTop","textAlign","Button","variant","onClick","e","ApiCalendar","handleAuthClick","NavBar","backgroundColor","sign","top","left","position","size","handleSignoutClick","TYPES","ActionCreators","type","data","payload","user","Summary","history","useHistory","dispatch","useDispatch","useSelector","state","useState","bookingDone","setBookingDone","bookingProcessing","setBookingProcessing","bookingFail","setBookingFail","margin","fontSize","Grid","container","spacing","item","xs","name","email","room","label","date","time","color","timeout","push","slotTime","hour","parseInt","split","minute","startDate","moment","set","endDate","createEvent","summary","description","start","dateTime","toISOString","timeZone","end","then","resp","catch","MeetingRoomDetails","rooms","meetingDesc","setMeetingDesc","value","meetingRoom","setMeetingRoom","className","TextField","select","placeholder","onChange","map","option","idx","MenuItem","InputLabelProps","shrink","disabled","TimeSlots","slotList","Array","val","ind","Math","floor","format","justify","slot","undefined","setSlotTime","ChooseSlot","prevTime","prevDate","Date","toDate","setDate","dateSelected","setDateSelected","minDate","App","loggedIn","useEffect","onLoad","setData","listenSign","window","gapi","auth2","getAuthInstance","currentUser","get","getBasicProfile","getName","getEmail","basename","path","component","render","to","exact","Boolean","location","hostname","match","initialState","roomName","reducer","action","console","log","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","configureStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52f9fe0a.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\",\n  fill: \"#4285F4\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\",\n  fill: \"#34A853\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782\",\n  fill: \"#FBBC05\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\",\n  fill: \"#EB4335\"\n});\n\nfunction SvgGoogleIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 2443,\n    height: 2500,\n    viewBox: \"0 0 256 262\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogleIcon);\nexport default __webpack_public_path__ + \"static/media/google-icon.a45b46e9.svg\";\nexport { ForwardRef as ReactComponent };","import eact from \"react\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ReactComponent as Google } from \"../../assets/google-icon.svg\";\r\n\r\nfunction Login(props) {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          marginTop: \"100px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={(e) => {\r\n            ApiCalendar.handleAuthClick();\r\n          }}\r\n        >\r\n          <Google style={{ height: \"30px\", width: \"50px\" }} />\r\n          Login with Google\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nfunction NavBar(props) {\r\n  const logout = () => {\r\n    ApiCalendar.handleSignoutClick();\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#f50057\", height: \"50px\" }}>\r\n      {props.sign && (\r\n        <Button\r\n          style={{\r\n            top: \"10px\",\r\n            left: \"10px\",\r\n            position: \"absolute\",\r\n          }}\r\n          variant=\"contained\"\r\n          size=\"small\"\r\n          onClick={logout}\r\n        >\r\n          Logout\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","export const TYPES = {\r\n    CLEAR: 'CLEAR',\r\n    LOGIN: 'LOGIN',\r\n    LOGOUT: 'LOGOUT',\r\n    SET_MEETING_DETAILS:\"SET_MEETING_DETAILS\",\r\n    SET_MEETING_TIMING:\"SET_MEETING_TIMING\",\r\n}","import { TYPES } from '../constants/actionTypes';\r\n\r\nexport const ActionCreators = {\r\n    clear : ()=>({type: TYPES.CLEAR}),\r\n    setMeetingTimings: (data) => ({ type: TYPES.SET_MEETING_TIMING, payload: { data }}),\r\n    setMeetingDetails: (data) => ({ type: TYPES.SET_MEETING_DETAILS, payload: { data }}),\r\n    login: (user) => ({ type: TYPES.LOGIN, payload: { user } }),\r\n    logOut: () => ({ type: TYPES.LOGOUT})\r\n}","import React, {useState} from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {ActionCreators} from \"../../actions/userActions\";\r\nimport moment from \"moment\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\nfunction Summary(props) {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.user)\r\n    const [bookingDone, setBookingDone] = useState(false)\r\n    const [bookingProcessing, setBookingProcessing] = useState(false)\r\n    const [bookingFail,setBookingFail] = useState(false)\r\n    const confirmBooking = () => {\r\n\r\n        let {time: slotTime, date} = data;\r\n        let hour = parseInt(slotTime.split(\" \")[0].split(\":\")[0]);\r\n        if (slotTime.split(\" \")[1] === \"pm\") {\r\n            hour += 12;\r\n        }\r\n        let minute = parseInt(slotTime.split(\" \")[0].split(\":\")[1]);\r\n\r\n        let startDate = moment(date, \"DD-MM-YYYY\").set({\r\n            hour: hour,\r\n            minute: minute,\r\n        });\r\n\r\n        let endDate = moment(date, \"DD-MM-YYYY\").set({\r\n            hour: minute ? hour + 1 : hour,\r\n            minute: minute ? 0 : 30,\r\n        });\r\n        setBookingProcessing(true)\r\n        ApiCalendar.createEvent(\r\n            {\r\n                summary: `Book the meeting on ${data.room.label}`,\r\n                description: data.description,\r\n                start: {\r\n                    dateTime: startDate.toISOString(),\r\n                    timeZone: \"Asia/Kolkata\",\r\n                },\r\n                end: {\r\n                    dateTime: endDate.toISOString(),\r\n                    timeZone: \"Asia/Kolkata\",\r\n                },\r\n            },\r\n            \"primary\"\r\n        )\r\n            .then((resp) => {\r\n                setBookingProcessing(false)\r\n                setBookingDone(true)\r\n            })\r\n            .catch((e) => {\r\n                setBookingProcessing(false)\r\n                setBookingDone(true)\r\n                setBookingFail(true)\r\n            });\r\n    }\r\n    return (\r\n        <div style={{\r\n            margin: \"10px auto\",\r\n            width: \"50%\",\r\n            fontSize: 25\r\n        }}>\r\n            <h2>Booking Summary</h2>\r\n            <Grid container spacing={1}>\r\n                <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        Name:\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {data.user.name}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        Email:\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {data.user.email}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        Meeting Room:\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {data.room.label}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        Date:\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {data.date}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                    <Grid item xs={4}>\r\n                        Slot:\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        {data.time}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <br/>\r\n            {bookingFail&& <h3>Booking Failed, Retry</h3>}\r\n            {bookingProcessing ?\r\n                <div style={{margin: \"0 auto\"}}>\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#F50057\"\r\n                        height={100}\r\n                        width={100}\r\n                        timeout={3000} //3 secs\r\n                    />\r\n                </div>\r\n                : <div>\r\n                    {bookingDone ?\r\n                        <>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{width: \"100%\"}}\r\n                                onClick={() => {\r\n                                    history.push(\"/bookingDetails\")\r\n                                    dispatch(ActionCreators.clear())\r\n                                }}\r\n                            >\r\n                                Book More\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                style={{width: \"100%\"}}\r\n                                onClick={()=> {\r\n                                    ApiCalendar.handleSignoutClick()\r\n                                }}\r\n                            >\r\n                                Finish\r\n                            </Button>\r\n                        </>\r\n                        :\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            style={{width: \"100%\"}}\r\n                            onClick={confirmBooking}\r\n                        >\r\n                            Confirm Booking\r\n                        </Button>}\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport \"./MeetingRoomDetails.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {MenuItem} from \"@material-ui/core\";\r\nimport {ActionCreators} from \"../../actions/userActions\";\r\n\r\nconst MeetingRoomDetails = (props) => {\r\n    const history = useHistory();\r\n    const user = useSelector(state => state.user.user);\r\n    const description = useSelector(state => state.user.description);\r\n    const room = useSelector(state => state.user.room);\r\n    const dispatch = useDispatch();\r\n\r\n    const rooms = [\r\n        \"Training Room-1\",\r\n        \"Training Room-2\",\r\n        \"Training Room-3\",\r\n    ];\r\n\r\n    const [meetingDesc, setMeetingDesc] = useState(description);\r\n    const [meetingRoom, setMeetingRoom] = useState(room&&room.value);\r\n\r\n\r\n    return (\r\n        <div className={\"meetingRoom\"}>\r\n            <h2> Meeting Room Booking </h2>\r\n\r\n            <TextField\r\n                id=\"select-room\"\r\n                select\r\n                label=\"Meeting Room\"\r\n                placeholder=\"Select Meeting Room\"\r\n                value={meetingRoom}\r\n                onChange={e => setMeetingRoom(e.target.value)}\r\n                variant=\"outlined\"\r\n                style={{\r\n                    margin:10\r\n                }}\r\n            >\r\n                {rooms.map((option,idx) => (\r\n                    <MenuItem key={idx} value={idx}>\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </TextField>\r\n\r\n            <TextField\r\n                id=\"username\"\r\n                label=\"Name\"\r\n                style={{margin: 10}}\r\n                placeholder=\"Enter Your Name\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                value={user.name}\r\n                disabled\r\n            />\r\n            <TextField\r\n                label=\"Meeting Description\"\r\n                style={{margin: 10}}\r\n                placeholder=\"Enter meeting description\"\r\n                margin=\"normal\"\r\n                value={meetingDesc}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={(e) => setMeetingDesc(e.target.value)}\r\n                variant=\"outlined\"\r\n            />\r\n            <br/>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={!(meetingRoom!== null && meetingDesc)}\r\n                style={{\r\n                    margin:10\r\n                }}\r\n                onClick={() => {\r\n                    dispatch(\r\n                        ActionCreators.setMeetingDetails({\r\n                            room: {label : rooms[meetingRoom],value:meetingRoom},\r\n                            description: meetingDesc,\r\n                        })\r\n                    );\r\n                    history.push(\"/bookingTiming\");\r\n                }}\r\n            >\r\n                Next\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MeetingRoomDetails;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction TimeSlots(props) {\r\n  const slotList = [...Array(19)].map((val, ind) => {\r\n    return moment(\r\n      `${10 + Math.floor(ind / 2)}:${ind % 2 === 0 ? \"00\" : \"30\"}`,\r\n      \"HH:mm\"\r\n    ).format(\"hh:mm a\");\r\n  });\r\n  return (\r\n    <>\r\n      <p style={{ textAlign: \"center\", fontSize: \"25px\" }}>\r\n        Please select your preferred slot\r\n      </p>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={7}>\r\n          <Grid container justify=\"center\" spacing={2}>\r\n            {slotList.map((slot) => (\r\n              <Grid key={slot} item>\r\n                <Button\r\n                  variant={props.slotTime === slot ? \"contained\" : \"outlined\"}\r\n                  color={props.slotTime === slot ? \"secondary\" : undefined}\r\n                  onClick={() => props.setSlotTime(slot)}\r\n                >\r\n                  {slot}\r\n                </Button>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TimeSlots;\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport moment from \"moment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TimeSlots from \"./TimeSlots\";\r\nimport \"./ChooseSlot.css\";\r\nimport {ActionCreators} from \"../../actions/userActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst ChooseSlot = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const prevTime = useSelector(state=>state.user.time)\r\n    const prevDate = useSelector(state=>state.user.date)\r\n    const [date, setDate] = useState(prevDate?new Date(moment(prevDate,\"DD-MM-YYYY\").toDate()):new Date());\r\n    const [slotTime, setSlotTime] = useState(prevTime||null);\r\n    const [dateSelected, setDateSelected] = useState(!!prevDate);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Calendar\r\n                value={date}\r\n                minDate={new Date()}\r\n                onChange={(val) => {\r\n                    setDate(val);\r\n                    setDateSelected(true);\r\n                }}\r\n            />\r\n            <p style={{textAlign: \"center\"}}>\r\n                {moment(date).format(\"dddd, Do MMMM\")}\r\n            </p>\r\n            <br/>\r\n            <TimeSlots {...{slotTime, setSlotTime}} />\r\n            <br/>\r\n            <Button\r\n                onClick={() => {\r\n                    dispatch(ActionCreators.setMeetingTimings({\r\n                        date:moment(date).format(\"DD-MM-YYYY\"),\r\n                        time: slotTime,\r\n                    }))\r\n                    history.push(\"/bookingSummary\")\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                disabled={!(dateSelected && slotTime)}\r\n                style={{margin: \"10px 40% 30px 40%\", width: \"20%\"}}\r\n            >\r\n                BOOK APPOINTMENT\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChooseSlot;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Route,\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./pages/login/Login\";\r\nimport ApiCalendar from \"react-google-calendar-api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport NavBar from \"./component/navBar/NavBar\";\r\nimport {ActionCreators} from \"./actions/userActions\";\r\nimport Summary from \"./pages/sumamry/Summary\";\r\nimport MeetingRoomDetails from \"./pages/meetingRoomDetails/MeetingRoomDetails\";\r\nimport ChooseSlot from \"./pages/chooseSlot/ChooseSlot\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const loggedIn = useSelector((state) => !!state.user.user);\r\n\r\n    useEffect(() => {\r\n        ApiCalendar.onLoad(() => {\r\n            if (ApiCalendar.sign) {\r\n                setData(true);\r\n            }\r\n            ApiCalendar.listenSign((val) => {\r\n                setData(val);\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const setData = (loggedIn) => {\r\n        if (loggedIn) {\r\n            let user = window.gapi.auth2\r\n                .getAuthInstance()\r\n                .currentUser.get()\r\n                .getBasicProfile();\r\n            dispatch(\r\n                ActionCreators.login({\r\n                    name: user.getName(),\r\n                    email: user.getEmail(),\r\n                })\r\n            );\r\n        } else {\r\n            dispatch(ActionCreators.logOut());\r\n            dispatch(ActionCreators.clear())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavBar sign={loggedIn}/>\r\n            <Router basename={\"meetingRoomBooking\"}>\r\n\r\n                {!loggedIn ? (\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Login}/>\r\n                        <Route render={() => <Redirect to=\"/\"/>}/>\r\n                    </Switch>\r\n                ) : (\r\n                    <Switch>\r\n                        <Route path=\"/bookingDetails\" component={MeetingRoomDetails}/>\r\n                        <Route path=\"/bookingTiming\" component={ChooseSlot}/>\r\n                        <Route path=\"/bookingSummary\" component={Summary}/>\r\n                        <Route render={() => <Redirect to=\"/bookingDetails\"/>}/>\r\n                    </Switch>\r\n                )}\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { TYPES } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  user:null,\r\n  roomName:null,\r\n  description:null,\r\n  date:null,\r\n  time:null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.LOGIN:\r\n      console.log('login', action.payload.user)\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n      }\r\n    case TYPES.LOGOUT:\r\n      console.log('logout')\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      }\r\n    case TYPES.SET_MEETING_DETAILS:\r\n      return {\r\n        ...state,\r\n          room:action.payload.data.room,\r\n        description:action.payload.data.description,\r\n      }\r\n    case TYPES.SET_MEETING_TIMING:\r\n      return {\r\n        ...state,\r\n        date:action.payload.data.date,\r\n        time:action.payload.data.time,\r\n      }\r\n    case TYPES.CLEAR:\r\n      return {\r\n        ...state,\r\n        date:null,\r\n        time:null,\r\n        room:null,\r\n        description:null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport user from '../reducers/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user\r\n});\r\n\r\nconst configureStore = () => {\r\n    return createStore(\r\n        rootReducer,\r\n        compose(applyMiddleware(thunk))\r\n    );\r\n};\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./store/userStore\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}